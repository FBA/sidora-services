<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xsi:schemaLocation="
http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <bean id="pidAggregator" class="edu.smithsonian.services.fedorarepo.aggregators.PidAggregationStrategy" />
    
    <!--
        TODO: Add Deployment Metadata backport
    -->
    <camelContext xmlns="http://camel.apache.org/schema/blueprint" >
        <route id="CameraTrapStartProcessing">
            <from uri="file:Process?moveFailed=Error_CamelTrap&amp;delete=true"/>
            <log message="Starting Camera Trap Process" /> 
            <!--If issue with large arcives can 'slow' down the route with delay below-->
            <delay>
                <constant>3000</constant>
            </delay>
            <log message="Starting Extraction" />
            <to uri="extractor:extract?location=CameraTrapData" />
            <log message="Finished Extraction" />
            <transform>
                <simple>deployment_manifest.xml</simple>
            </transform>
            <to uri="reader:file?type=text" />
            <to uri="direct:process" />
            <log message="Finished Data processing!" />
        </route>
        <route id="CameraTrapProcessData">
            <from uri="direct:process" />
            <log message="Starting Data processing... " /> 
            <!--
                TODO: Determine 'owner' of data and ensure that it is 'set' when
                      inserting data into Fedora

            -->
            <to uri="fedora:create" /> <!-- Level 4 -->
            <!--Search and find/create parent concepts-->
            <multicast>
                <to uri="direct:manifest" />
                <to uri="direct:researcher" />
                <to uri="direct:volunteer" />
                <to uri="direct:processImages" />
            </multicast>
            <log message="Finished Data processing!" /> 
        </route>
        <route id="CameraTrapTransformManifest" >
            <from uri="direct:manifest" />
            <to uri="fedora:datastream?name=MANIFEST&amp;type=text/xml&amp;group=M" />
            <to uri="xslt:file:Input/xslt/amazon_map1.xsl"/>
            <to uri="xslt:file:Input/xslt/amazon_map2.xsl"/>
            <to uri="xslt:file:Input/xslt/amazon_map3.xsl"/>
            <!--
                NOTE: Double check to make sure over writing the original manifest
                        with the modified one is correct
            -->
            <to uri="fedora:datastream?name=MANIFEST&amp;type=text/xml&amp;group=M" />
            <log message="Manifest translated" /> 
        </route>
        <route id="CameraTrapTransformResearcherData" >
            <from uri="direct:researcher" />
            <to uri="xslt:file:Input/xslt/researcher.xsl"/>
            <transform>
                <xpath>//researcher/text()</xpath>
            </transform>
            <to uri="fedora:datastream?name=RESEARCHER&amp;type=text/csv&amp;group=M" />
            <log message="Researcher's Observation file created" /> 
        </route>
        <route id="CameraTrapTransformVolunteerData" >
            <from uri="direct:volunteer" />
            <to uri="xslt:file:Input/xslt/volunteer.xsl"/>
            <transform>
                <xpath>//researcher/text()</xpath>
            </transform>
            <to uri="fedora:datastream?name=VOLUNTEER&amp;type=text/csv&amp;group=M" />
            <log message="Volunteer's Observation file created" /> 
        </route>
        <route id="CameraTrapProcessImages" >
            <from uri="direct:processImages" /> 
            <log message="Starting Image processing..." /> 
            <setHeader headerName="FedoraParentConcept">
                <simple>${header.CamelFedoraPid}</simple>
            </setHeader>
            <split strategyRef="pidAggregator" >
                <xpath>//ImageFileName/text()</xpath>
                <to uri="reader:file" />
                <to uri="fedora:create?pid=null" />
                <!--Ingest image as is Raw image determine mime type from image-->
                <!--If image is a jpeg do not add to the OBJ datastream-->
                <to uri="fedora:datastream?name=OBJ&amp;type=image/jpeg&amp;group=M" />
                <to uri="direct:transformImage" />
            </split>
            <!--
                FIXME: Change template to use 'FedoreParentConcept' instead of 'CamelParentConcept'
                      Pointless to store and unstore the parent PID
            -->
            <to uri="velocity:file:Input/templates/CameraTrapResourceTemplate.vsl" />
            <to uri="fedora:datastream?name=RELS-EXT" /> 
            <log message="Finished processing Images" />           
        </route>
        <route id="CameraTrapTransformImages">
            <from uri="direct:transformImage" />
            <!--<multicast>-->
                <to uri="direct:createThumbnail" />
                <!--<to uri="direct:createResampled" />-->
                <!--
                    TODO: Add FITS component to route
                -->
            <!--</multicast>-->
            <log message="Image processed" />
        </route>
        <route id="CameraTrapCreateThumbnailImage" >
            <from uri="direct:createThumbnail" />
            <to uri="thumbnailator:image?keepRatio=false&amp;size=(72,96)"/>
            <to uri="fedora:datastream?name=THUMBNAIL&amp;type=image/jpeg&amp;group=M" />
        </route>
        <route id="CameraTrapCreateResampledImage">
            <from uri="direct:createResampled" />
            <!--
                NOTE: This might not be needed

                FIXME: Figure out what the Drush scripts are doing to 'normalized'
                      the image. Based on conversation with Dan didn't sound like
                      it was changing the quality of the original
                FIXME: If 'normalized' image is needed and should be the same
                       size as the original, remove size requirement from route
            -->
            <!--Create a JPEG2000 version of the Raw image no other changes-->
            <to uri="thumbnailator:image?quality=80%&amp;size=(2048,1536)"/>
            <to uri="file://CameraTrapOutput/resample" />
        </route>
    </camelContext>
        
</blueprint>